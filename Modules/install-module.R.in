# Generated from install-module.R.in
#
Sys.setenv(PATH						=paste0("@R_HOME_PATH@/bin", .Platform$path.sep, Sys.getenv("PATH"))) #Make sure any Rscript calls use ours
Sys.setenv(RHOME					="@R_HOME_PATH@") #Rscript looks for RHOME not R_HOME
Sys.setenv(R_HOME					="@R_HOME_PATH@") #Some configure scripts need R_HOME (Im looking at you blavaan)
Sys.setenv(GITHUB_PAT				="@GITHUB_PAT@")
Sys.setenv(RENV_PATHS_ROOT			="@MODULES_RENV_ROOT_PATH@")
Sys.setenv(RENV_PATHS_CACHE			="@MODULES_RENV_CACHE_PATH@")
Sys.setenv(JASPENGINE_LOCATION		="@JASP_ENGINE_PATH@/JASPEngine")
Sys.setenv(JAGS_PREFIX				="@jags_HOME@")
Sys.setenv(JAGS_INCLUDEDIR			="@jags_INCLUDE_DIRS@")
Sys.setenv(JAGS_LIBDIR				="@jags_LIBRARY_DIRS@")
Sys.setenv(JASP_R_INTERFACE_LIBRARY	="Yes, do it")
Sys.setenv(RPKG_DOWNLOAD_ONLY       = "@RPKG_DOWNLOAD_ONLY@")
Sys.setenv(REGENERATE_LOCKFILE      = "@REGENERATE_LOCKFILE@")
Sys.setenv(MODULE_INSTALL_MODE      = "@MODULE_INSTALL_MODE@")



if("@R_PKG_CELLAR_PATH@" != "")
	Sys.setenv(RENV_PATHS_CELLAR   = "@R_PKG_CELLAR_PATH@")

defaultMakeFlags  <- function() { Sys.setenv(MAKEFLAGS = "-j" ) }
setMakeFlagsToOne <- function() { Sys.setenv(MAKEFLAGS = "-j1") }
defaultMakeFlags()

# everything with precompiled Stan models
options("JASP_RENV_INSTALL_OPTIONS" = list(
  blavaan  = list(before = setMakeFlagsToOne, after  = defaultMakeFlags),
  metaBMA  = list(before = setMakeFlagsToOne, after  = defaultMakeFlags),
  rstanarm = list(before = setMakeFlagsToOne, after  = defaultMakeFlags),
  stanova  = list(before = setMakeFlagsToOne, after  = defaultMakeFlags),
  rpf      = list(before = setMakeFlagsToOne, after  = defaultMakeFlags),
  cubature = list(before = setMakeFlagsToOne, after  = defaultMakeFlags)
))
options(renv.config.install.verbose = TRUE)
configureVars = NULL

if (@IS_LINUX_LOCAL_BUILD@) {
  # Only set when building using LINUX_LOCAL_BUILD. This is to help jags finds its libraries
  Sys.setenv(LD_LIBRARY_PATH="@jags_LIBRARY_DIRS@")
  configureVars = c(V8 = 'DOWNLOAD_STATIC_LIBV8=1')
} 
if(@IS_FLATPAK_USED@) {
  configureVars = c(V8 = "V8_PKG_LIBS='-L/app/lib64/v8/lib -lv8_monolith' V8_PKG_CFLAGS=-I/app/lib64/v8/include")
}

.libPaths("@JASPMODULEINSTALLER_LIBRARY@")
sandboxPaths <- renv:::renv_sandbox_activate()

configureVars = c(configureVars, jaspBase = "INCLUDE_DIR='@PROJECT_SOURCE_DIR@/Common/jaspColumnEncoder'") #Needed for flatpak build as it keeps recompiling jaspBase (which it shouldnt of course but I dont know why) and this is an easy fix to get it to work now
options(
  configure.vars = configureVars,
  PKGDEPENDS_LIBRARY = "@PKGDEPENDS_LIBRARY@"
)

options(error = recover)
jaspModuleInstaller::installJaspModule(
    modulePkg           = "@MODULES_SOURCE_PATH@/@MODULE@",
    repos               = "@R_REPOSITORY@",
    moduleLibrary       = "@MODULES_BINARY_PATH@/@MODULE@",
    onlyModPkg          = FALSE,
    frameworkLibrary    = "@R_LIBRARY_PATH@"
)

result <- "succes"
if (result == "succes") {
  cat(NULL, file="@MODULES_RENV_ROOT_PATH@/@MODULE@-installed-successfully.log")
}

# Converting the absolute symlinks to relative symlinks on macOS
# Todo, I can do this using CMake like I do on Windows
if (Sys.info()["sysname"] == "Darwin") {
  source('@MODULES_BINARY_PATH@/Tools/symlinkTools.R')
  convertAbsoluteSymlinksToRelative('@MODULES_BINARY_PATH@', '@MODULES_RENV_CACHE_PATH@')
}
